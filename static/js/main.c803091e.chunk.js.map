{"version":3,"sources":["routes.js","components/Navigation/Navigation.js","components/Navigation/Navigation.container.js","components/UserMenu/UserMenu.js","components/UserMenu/UserMenu.container.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/AppBar/AppBar.container.js","components/PrivateRoute.js","components/PublicRoute.js","components/App/App.js","components/App/App.container.js","redux/store.js","index.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/Container/Container.js","components/AppBar/AppBar.module.css","components/Container/Container.module.css","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["Navigation","isAuthenticated","to","routes","exact","className","styles","link","activeClassName","activeLink","connect","state","authSelectors","getIsAuthenticated","UserMenu","name","onLogout","container","Button","type","onClick","variant","color","mapDispatchToProps","authOperations","logOut","getUsername","AuthNav","AppBar","header","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","ContactsView","RegisterView","LoginView","App","this","onGetCurretnUser","Container","fallback","path","getCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","addContact","number","dispatch","items","axios","post","then","data","catch","error","message","deleteContact","id","delete","fetchContacts","get","getFilter","filter","getAllContacts","getLoading","getVisibleContacts","createSelector","normalizeFilter","toLowerCase","includes","getExistingContactsName","length","map","createReducer","_","payload","combineReducers","children","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","defaults","baseURL","headers","common","Authorization","register","credentials","logIn","getState","persistedToken"],"mappings":"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","file":"static/js/main.c803091e.chunk.js","sourcesContent":["export default {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  login: '/login',\r\n  register: '/register',\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Navigation.module.css';\r\nimport routes from '../../routes';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to={routes.contacts}\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Phonebook\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nNavigation.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport Navigation from './Navigation';\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ name, onLogout }) => (\r\n  <div className={styles.container}>\r\n    <span className={styles.name}>{name} </span>\r\n    <Button\r\n      type=\"button\"\r\n      onClick={onLogout}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n    >\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nUserMenu.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserMenu;\r\n","import { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport UserMenu from './UserMenu';\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport styles from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to={routes.register}\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Registartion\r\n    </NavLink>\r\n    <NavLink\r\n      to={routes.login}\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nAppBar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\nexport default AppBar;\r\n","import { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport AppBar from './AppBar';\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.elementType.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  redirectTo: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPublicRoute.propTypes = {\r\n  component: PropTypes.elementType.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  redirectTo: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '../AppBar';\r\nimport Container from '../Container';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport PublicRoute from '../PublicRoute';\r\nimport routes from '../../routes';\r\n\r\nconst HomeView = lazy(() =>\r\n  import('../../views/HomeView' /* webpackChunkName: \"home-page\" */),\r\n);\r\nconst ContactsView = lazy(() =>\r\n  import('../../views/ContactsView' /* webpackChunkName: \"phonebook\" */),\r\n);\r\nconst RegisterView = lazy(() =>\r\n  import('../../views/RegisterView' /* webpackChunkName: \"register-page\" */),\r\n);\r\nconst LoginView = lazy(() =>\r\n  import('../../views/LoginView' /* webpackChunkName: \"login-page\" */),\r\n);\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    onGetCurrentUser: PropTypes.func,\r\n  };\r\n  componentDidMount() {\r\n    this.props.onGetCurretnUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <Switch>\r\n            <Route exact path={routes.home} component={HomeView} />\r\n            <PublicRoute\r\n              path={routes.register}\r\n              restricted\r\n              redirectTo={routes.contacts}\r\n              component={RegisterView}\r\n            />\r\n            <PublicRoute\r\n              path={routes.login}\r\n              restricted\r\n              redirectTo={routes.contacts}\r\n              component={LoginView}\r\n            />\r\n            <PrivateRoute\r\n              path={routes.contacts}\r\n              redirectTo={routes.login}\r\n              component={ContactsView}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport App from './App';\r\nimport { authOperations } from '../../redux/auth';\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurretnUser: authOperations.getCurrentUser,\r\n};\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n       <BrowserRouter>\n         <App />    \n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__1JJ5t\",\"activeLink\":\"AuthNav_activeLink__2sqTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__E38-9\",\"activeLink\":\"Navigation_activeLink__1-LUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__868co\",\"name\":\"UserMenu_name__2hBJw\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSucces',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSucces');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactsRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactsSucces',\r\n);\r\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from './contacts-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const items = { name, number };\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post('/contacts', items)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(id)))\r\n    .catch(error => dispatch(deleteContactsError(error.message)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  },\r\n);\r\n\r\nconst getExistingContactsName = createSelector([getAllContacts], contacts => {\r\n  if (contacts.length >= 0) {\r\n    return contacts.map(({ name }) => name.toLowerCase());\r\n  }\r\n});\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getExistingContactsName,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({ items, filter, loading, error });\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3UU_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3kpiG\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(({ data }) =>\r\n      dispatch(authActions.registerSuccess(data), token.set(data.token)),\r\n    )\r\n    .catch(error => dispatch(authActions.registerError(error.message)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(({ data }) =>\r\n      dispatch(authActions.loginSuccess(data), token.set(data.token)),\r\n    )\r\n    .catch(error => dispatch(authActions.loginError(error.message)));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  axios\r\n    .post('/users/logout')\r\n    .then(authActions.logoutSuccess(), token.unset())\r\n    .catch(error => dispatch(authActions.logoutError(error.message)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => dispatch(authActions.getCurrentUserError(error.message)));\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n"],"sourceRoot":""}